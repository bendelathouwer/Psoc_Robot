//*****************************************************************************
//*****************************************************************************
//  FILENAME: PWM1.h
//   Version: 2.5, Updated on 2015/3/4 at 22:26:51
//  Generated by PSoC Designer 5.4.3191
//
//  DESCRIPTION: PWM16 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef PWM1_INCLUDE
#define PWM1_INCLUDE

#include <m8c.h>

#pragma fastcall16 PWM1_EnableInt
#pragma fastcall16 PWM1_DisableInt
#pragma fastcall16 PWM1_Start
#pragma fastcall16 PWM1_Stop
#pragma fastcall16 PWM1_wReadCounter              // Read  DR0
#pragma fastcall16 PWM1_WritePeriod               // Write DR1
#pragma fastcall16 PWM1_wReadPulseWidth           // Read  DR2
#pragma fastcall16 PWM1_WritePulseWidth           // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 wPWM1_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 wPWM1_ReadPulseWidth           // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the PWM1 API.
//-------------------------------------------------

extern void PWM1_EnableInt(void);                  // Proxy Class 1
extern void PWM1_DisableInt(void);                 // Proxy Class 1
extern void PWM1_Start(void);                      // Proxy Class 1
extern void PWM1_Stop(void);                       // Proxy Class 1
extern WORD PWM1_wReadCounter(void);               // Proxy Class 2
extern void PWM1_WritePeriod(WORD wPeriod);        // Proxy Class 1
extern WORD PWM1_wReadPulseWidth(void);            // Proxy Class 1
extern void PWM1_WritePulseWidth(WORD wPulseWidth);// Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern WORD wPWM1_ReadCounter(void);            // Deprecated
extern WORD wPWM1_ReadPulseWidth(void);         // Deprecated


//-------------------------------------------------
// Constants for PWM1 API's.
//-------------------------------------------------

#define PWM1_CONTROL_REG_START_BIT             ( 0x01 )
#define PWM1_INT_REG_ADDR                      ( 0x0df )
#define PWM1_INT_MASK                          ( 0x02 )


//--------------------------------------------------
// Constants for PWM1 user defined values
//--------------------------------------------------

#define PWM1_PERIOD                            ( 0x3e8 )
#define PWM1_PULSE_WIDTH                       ( 0x1388 )


//-------------------------------------------------
// Register Addresses for PWM1
//-------------------------------------------------

#pragma ioport  PWM1_COUNTER_LSB_REG:   0x040              //DR0 Count register LSB
BYTE            PWM1_COUNTER_LSB_REG;
#pragma ioport  PWM1_COUNTER_MSB_REG:   0x044              //DR0 Count register MSB
BYTE            PWM1_COUNTER_MSB_REG;
#pragma ioport  PWM1_PERIOD_LSB_REG:    0x041              //DR1 Period register LSB
BYTE            PWM1_PERIOD_LSB_REG;
#pragma ioport  PWM1_PERIOD_MSB_REG:    0x045              //DR1 Period register MSB
BYTE            PWM1_PERIOD_MSB_REG;
#pragma ioport  PWM1_COMPARE_LSB_REG:   0x042              //DR2 Compare register LSB
BYTE            PWM1_COMPARE_LSB_REG;
#pragma ioport  PWM1_COMPARE_MSB_REG:   0x046              //DR2 Compare register MSB
BYTE            PWM1_COMPARE_MSB_REG;
#pragma ioport  PWM1_CONTROL_LSB_REG:   0x043              //Control register LSB
BYTE            PWM1_CONTROL_LSB_REG;
#pragma ioport  PWM1_CONTROL_MSB_REG:   0x047              //Control register MSB
BYTE            PWM1_CONTROL_MSB_REG;
#pragma ioport  PWM1_FUNC_LSB_REG:  0x140                  //Function register LSB
BYTE            PWM1_FUNC_LSB_REG;
#pragma ioport  PWM1_FUNC_MSB_REG:  0x144                  //Function register MSB
BYTE            PWM1_FUNC_MSB_REG;
#pragma ioport  PWM1_INPUT_LSB_REG: 0x141                  //Input register LSB
BYTE            PWM1_INPUT_LSB_REG;
#pragma ioport  PWM1_INPUT_MSB_REG: 0x145                  //Input register MSB
BYTE            PWM1_INPUT_MSB_REG;
#pragma ioport  PWM1_OUTPUT_LSB_REG:    0x142              //Output register LSB
BYTE            PWM1_OUTPUT_LSB_REG;
#pragma ioport  PWM1_OUTPUT_MSB_REG:    0x146              //Output register MSB
BYTE            PWM1_OUTPUT_MSB_REG;
#pragma ioport  PWM1_INT_REG:       0x0df                  //Interrupt Mask Register
BYTE            PWM1_INT_REG;


//-------------------------------------------------
// PWM1 Macro 'Functions'
//-------------------------------------------------

#define PWM1_Start_M \
   ( PWM1_CONTROL_LSB_REG |=  PWM1_CONTROL_REG_START_BIT )

#define PWM1_Stop_M  \
   ( PWM1_CONTROL_LSB_REG &= ~PWM1_CONTROL_REG_START_BIT )

#define PWM1_EnableInt_M   \
   M8C_EnableIntMask(  PWM1_INT_REG, PWM1_INT_MASK )

#define PWM1_DisableInt_M  \
   M8C_DisableIntMask( PWM1_INT_REG, PWM1_INT_MASK )

#endif
// end of file PWM1.h
